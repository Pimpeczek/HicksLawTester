<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label1.Text" xml:space="preserve">
    <value>Instruction:
After pressing the "Begin" button a number will show on the "Number prompt", 
benith it a certain number of buttons will appear. 
After pressing button corresponding to shown number the proces repeats.
There are three warmup tests.
Results will appear in tme main window after finishing all tests.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        MIf5ABoAAAAASUVORK5CYII=
</value>
  </data>
</root>